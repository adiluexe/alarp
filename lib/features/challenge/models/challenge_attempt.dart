import 'package:flutter/foundation.dart';
import 'step_result.dart'; // Assuming StepResult is in the same directory or imported correctly

@immutable
class ChallengeAttempt {
  final String id; // Unique ID for this attempt (e.g., from Supabase)
  final String userId;
  final String challengeId;
  final String challengeTitle; // Store title for easier display
  final DateTime completedAt;
  final int score;
  final List<StepResult> stepResults;

  const ChallengeAttempt({
    required this.id,
    required this.userId,
    required this.challengeId,
    required this.challengeTitle,
    required this.completedAt,
    required this.score,
    required this.stepResults,
  });

  // Factory constructor for creating from JSON (e.g., Supabase response)
  factory ChallengeAttempt.fromJson(Map<String, dynamic> json) {
    // Find the associated challenge to get the title (or pass it if stored directly)
    // This might require access to Challenge data or storing title in the DB record
    // For now, let's assume challengeTitle is directly in the JSON or fetched elsewhere.
    // A simpler approach for now might be to just store challengeId and look up title later.
    // Let's refine this: fetch title based on challengeId when needed, or store it in DB.
    // Assuming challenge_title is stored in the DB row for simplicity here.
    return ChallengeAttempt(
      id: json['id'] as String,
      userId: json['user_id'] as String,
      challengeId: json['challenge_id'] as String,
      challengeTitle:
          json['challenge_title'] as String? ??
          'Unknown Challenge', // Handle potential null
      completedAt: DateTime.parse(json['completed_at'] as String),
      score: json['score'] as int,
      stepResults:
          (json['step_results'] as List<dynamic>? ?? [])
              .map(
                (stepJson) =>
                    StepResult.fromJson(stepJson as Map<String, dynamic>),
              )
              .toList(),
    );
  }

  // Method to convert to JSON (for sending to Supabase)
  Map<String, dynamic> toJson() {
    return {
      // 'id' is usually generated by DB, so not included here
      'user_id': userId,
      'challenge_id': challengeId,
      'challenge_title': challengeTitle, // Include title if storing it
      'completed_at': completedAt.toIso8601String(),
      'score': score,
      'step_results': stepResults.map((step) => step.toJson()).toList(),
    };
  }
}
